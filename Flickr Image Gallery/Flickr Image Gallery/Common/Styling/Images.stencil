// Generated using SwiftGen, by O.Halligon â€” https://github.com/SwiftGen/SwiftGen

{% if catalogs %}
import UIKit.UIImage

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length

struct ImageAsset: ImageProvider {

  fileprivate(set) var name: String

  var image: UIImage {
    let bundle = Bundle(for: BundleToken.self)
    let image = UIImage(named: name, in: bundle, compatibleWith: nil)
    guard let result = image else {
        fatalError("Unable to load image named \(name).")
    }
    return result
  }
}
{% macro enumBlock assets sp %}
{{sp}}  {% call casesBlock assets sp %}
{{sp}}  {% if not param.noAllValues %}
{{sp}}  // swiftlint:disable trailing_comma
{{sp}}  static let allImages: [ImageAsset] = [
{{sp}}    {% set sp2 %}{{sp}}  {% endset %}
{{sp}}    {% call allValuesBlock assets "image" "" sp2 %}
{{sp}}  ]
{{sp}}  {% endif %}
{% endmacro %}
{% macro casesBlock assets sp %}
{{sp}}  {% for asset in assets %}
{{sp}}  {% if asset.type == "image" %}
{{sp}}  static let {{asset.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}} = ImageAsset(name: "{{asset.value}}")
{{sp}}  {% elif asset.items %}
{{sp}}  enum {{asset.name|swiftIdentifier:"pretty"|escapeReservedKeywords}} {
{{sp}}    {% set sp2 %}{{sp}}  {% endset %}
{{sp}}    {% call casesBlock asset.items sp2 %}
{{sp}}  }
{{sp}}  {% endif %}
{{sp}}  {% endfor %}
{% endmacro %}
{% macro allValuesBlock assets filter prefix sp %}
{{sp}}  {% for asset in assets %}
{{sp}}  {% if asset.type == filter %}
{{sp}}  {{prefix}}{{asset.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}},
{{sp}}  {% elif asset.items %}
{{sp}}  {% set prefix2 %}{{prefix}}{{asset.name|swiftIdentifier:"pretty"|escapeReservedKeywords}}.{% endset %}
{{sp}}  {% call allValuesBlock asset.items filter prefix2 sp %}
{{sp}}  {% endif %}
{{sp}}  {% endfor %}
{% endmacro %}
// swiftlint:disable identifier_name line_length nesting type_body_length type_name
enum Asset {
  {% if catalogs.count > 1 %}
  {% for catalog in catalogs %}
  enum {{catalog.name|swiftIdentifier:"pretty"|escapeReservedKeywords}} {
    {% call enumBlock catalog.assets "  " %}
  }
  {% endfor %}
  {% else %}
  {% call enumBlock catalogs.first.assets "" %}
  {% endif %}
}
// swiftlint:enable identifier_name line_length nesting type_body_length type_name

extension UIImage {

  @available(iOS 1.0, tvOS 1.0, watchOS 1.0, *)
  convenience init!(asset: ImageAsset) {
    let bundle = Bundle(for: BundleToken.self)
    self.init(named: asset.name, in: bundle, compatibleWith: nil)
  }
}

private final class BundleToken {}
{% else %}
// No assets found
{% endif %}
